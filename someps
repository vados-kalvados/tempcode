param (
    [string]$Folder,
    [int]$Days
)

# Function to get the last working day of a given month
function Get-LastWorkingDay {
    param (
        [datetime]$date
    )

    # Get the last day of the month
    $lastDay = [datetime]::DaysInMonth($date.Year, $date.Month)
    $lastWorkingDay = Get-Date -Year $date.Year -Month $date.Month -Day $lastDay

    # Adjust if the last day is a weekend (Saturday/Sunday)
    while ($lastWorkingDay.DayOfWeek -eq 'Saturday' -or $lastWorkingDay.DayOfWeek -eq 'Sunday') {
        $lastWorkingDay = $lastWorkingDay.AddDays(-1)
    }

    return $lastWorkingDay
}

# Function to check if the folder name contains a date pattern matching the last working day
function ContainsLastWorkingDay {
    param (
        [string]$name
    )

    $datePattern = "\d{4}-\d{2}-\d{2}"
    if ($name -match $datePattern) {
        $dateStr = $matches[0]
        try {
            $date = [datetime]::ParseExact($dateStr, 'yyyy-MM-dd', $null)
        } catch {
            return $false
        }

        $lastWorkingDay = Get-LastWorkingDay $date

        return $date -eq $lastWorkingDay
    }

    return $false
}

# Get the current date
$now = Get-Date

# Calculate the cutoff date
$cutoffDate = $now.AddDays(-$Days)

# Get all folders recursively
try {
    $folders = Get-ChildItem -Path $Folder -Directory -Recurse -Force
} catch {
   
